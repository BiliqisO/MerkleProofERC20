{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "merkleToken",
      "outputs": [
        {
          "internalType": "contract MerkleToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFailBadProof",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFailClaimTwice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFailNotAllowedAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b506125538061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620001215760003560e01c806366d9a9a011620000af578063b5508aa9116200007a578063b5508aa91462000203578063ba414fa6146200020d578063e20c9f711462000228578063f33cf57b1462000232578063fa7626d4146200023c57600080fd5b806366d9a9a014620001bd5780637f5b7b9c14620001d657806385226c8114620001e0578063916a17c614620001f957600080fd5b806331edf2ea11620000f057806331edf2ea14620001955780633e5e3c23146200019f5780633f7286f414620001a95780634dd8980514620001b357600080fd5b80630a9254e414620001265780630d91f3d014620001325780631ed7831c14620001635780632ade3880146200017c575b600080fd5b620001306200024a565b005b601c5462000146906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6200016d620002c4565b6040516200015a9190620012e2565b6200018662000328565b6040516200015a919062001385565b6200013062000476565b6200016d620004cc565b6200016d6200052e565b6200013062000590565b620001c762000771565b6040516200015a91906200144b565b620001306200085b565b620001ea62000a1d565b6040516200015a919062001502565b620001c762000af7565b620001ea62000be1565b6200021762000cbb565b60405190151581526020016200015a565b6200016d62000df2565b6200013062000e54565b600754620002179060ff1681565b7f96af0c2fae069f9b01f02310bdd93634ed27b162d0ae24db1587a6258e1d01f2601d8190556040516200027e90620012d4565b908152602001604051809103906000f080158015620002a1573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b0392909216919091179055565b606060148054806020026020016040519081016040528092919081815260200182805480156200031e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620002ff575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200046d57600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562000455578382906000526020600020018054620003c19062001568565b80601f0160208091040260200160405190810160405280929190818152602001828054620003ef9062001568565b8015620004405780601f10620004145761010080835404028352916020019162000440565b820191906000526020600020905b8154815290600101906020018083116200042257829003601f168201915b5050505050815260200190600101906200039f565b5050505081525050815260200190600101906200034c565b50505050905090565b6200048062000e54565b6200048a62000e54565b620004ca6040518060400160405280601b81526020017f43616e742072656365697665206d6f7265207468616e206f6e6365000000000081525062001058565b565b606060168054806020026020016040519081016040528092919081815260200182805480156200031e576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620002ff575050505050905090565b606060158054806020026020016040519081016040528092919081815260200182805480156200031e576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620002ff575050505050905090565b60408051600380825260808201909252600091602082016060803683370190505090507fc38db87582dda0be501d2042fb49e20f7a9fc98397ae63a6b46ea3e20ee6161660001b81600081518110620005ed57620005ed620015a4565b6020026020010181815250507f7423d6d83607b81ac8afcc31122377e2bc6acf0bed2da4e33e06fad8f625020b60001b81600181518110620006335762000633620015a4565b6020026020010181815250507f47d79263b3efee4f4d9470121dcd87e2c20dbe7025531b813367b8ca7f3cc30a60001b81600281518110620006795762000679620015a4565b6020908102919091010152601c54604051630f44fe1d60e21b81526001600160a01b0390911690633d13f87490620006bc90600190600a908690600401620015ba565b600060405180830381600087803b158015620006d757600080fd5b505af1158015620006ec573d6000803e3d6000fd5b5050601c546040516370a0823160e01b8152600160048201526200076e93506001600160a01b0390911691506370a08231906024015b602060405180830381865afa15801562000740573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000766919062001619565b60006200109b565b50565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156200046d5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200084257602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620008035790505b5050505050815250508152602001906001019062000795565b60408051600380825260808201909252721daa61eaa241a8d89607194fc3b1184dcb9b4c9160009190602082016060803683370190505090507fc38db87582dda0be501d2042fb49e20f7a9fc98397ae63a6b46ea3e20ee6161660001b81600081518110620008ce57620008ce620015a4565b6020026020010181815250507f7423d6d83607b81ac8afcc31122377e2bc6acf0bed2da4e33e06fad8f625020b60001b81600181518110620009145762000914620015a4565b6020026020010181815250507f49ac76360194e7eb3034deee26b2e080e6588a9c18e4d02580da7ac7fc42687760001b816002815181106200095a576200095a620015a4565b6020908102919091010152601c54604051630f44fe1d60e21b81526001600160a01b0390911690633d13f874906200099c908590600a908690600401620015ba565b600060405180830381600087803b158015620009b757600080fd5b505af1158015620009cc573d6000803e3d6000fd5b5050601c546040516370a0823160e01b8152721daa61eaa241a8d89607194fc3b1184dcb9b4c600482015262000a1993506001600160a01b0390911691506370a082319060240162000722565b5050565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156200046d57838290600052602060002001805462000a639062001568565b80601f016020809104026020016040519081016040528092919081815260200182805462000a919062001568565b801562000ae25780601f1062000ab65761010080835404028352916020019162000ae2565b820191906000526020600020905b81548152906001019060200180831162000ac457829003601f168201915b50505050508152602001906001019062000a41565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156200046d5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000bc857602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000b895790505b5050505050815250508152602001906001019062000b1b565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156200046d57838290600052602060002001805462000c279062001568565b80601f016020809104026020016040519081016040528092919081815260200182805462000c559062001568565b801562000ca65780601f1062000c7a5761010080835404028352916020019162000ca6565b820191906000526020600020905b81548152906001019060200180831162000c8857829003601f168201915b50505050508152602001906001019062000c05565b600754600090610100900460ff161562000cde5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000ded5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000d6f917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001633565b60408051601f198184030181529082905262000d8b9162001666565b6000604051808303816000865af19150503d806000811462000dca576040519150601f19603f3d011682016040523d82523d6000602084013e62000dcf565b606091505b509150508080602001905181019062000de9919062001684565b9150505b919050565b606060138054806020026020016040519081016040528092919081815260200182805480156200031e576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620002ff575050505050905090565b60408051600380825260808201909252721daa61eaa241a8d89607194fc3b1184dcb9b4c9160009190602082016060803683370190505090507fc38db87582dda0be501d2042fb49e20f7a9fc98397ae63a6b46ea3e20ee6161660001b8160008151811062000ec75762000ec7620015a4565b6020026020010181815250507f7423d6d83607b81ac8afcc31122377e2bc6acf0bed2da4e33e06fad8f625020b60001b8160018151811062000f0d5762000f0d620015a4565b6020026020010181815250507f47d79263b3efee4f4d9470121dcd87e2c20dbe7025531b813367b8ca7f3cc30a60001b8160028151811062000f535762000f53620015a4565b6020908102919091010152601c54604051630f44fe1d60e21b81526001600160a01b0390911690633d13f8749062000f95908590600a908690600401620015ba565b600060405180830381600087803b15801562000fb057600080fd5b505af115801562000fc5573d6000803e3d6000fd5b5050601c546040516370a0823160e01b8152721daa61eaa241a8d89607194fc3b1184dcb9b4c600482015262000a1993506001600160a01b0390911691506370a0823190602401602060405180830381865afa1580156200102a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001050919062001619565b600a6200109b565b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051620010899190620016af565b60405180910390a16200076e620011c1565b80821462000a19577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200110e9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a162000a195b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620012c35760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526200125e929160200162001633565b60408051601f19818403018152908290526200127a9162001666565b6000604051808303816000865af19150503d8060008114620012b9576040519150601f19603f3d011682016040523d82523d6000602084013e620012be565b606091505b505050505b6007805461ff001916610100179055565b610e3d80620016e183390190565b6020808252825182820181905260009190848201906040850190845b81811015620013255783516001600160a01b031683529284019291840191600101620012fe565b50909695505050505050565b60005b838110156200134e57818101518382015260200162001334565b50506000910152565b600081518084526200137181602086016020860162001331565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b858110156200143b57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b818110156200142457605f198985030183526200141184865162001357565b948e01949350918d0191600101620013f2565b505050978a019794505091880191600101620013ac565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015620014f357898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620014dd5783516001600160e01b0319168252928b019260019290920191908b0190620014b1565b50978a0197955050509187019160010162001473565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200155b57603f198886030184526200154885835162001357565b9450928501929085019060010162001529565b5092979650505050505050565b600181811c908216806200157d57607f821691505b6020821081036200159e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038416815260208082018490526060604083018190528351908301819052600091848101916080850190845b818110156200160b57845183529383019391830191600101620015ed565b509098975050505050505050565b6000602082840312156200162c57600080fd5b5051919050565b6001600160e01b03198316815281516000906200165881600485016020870162001331565b919091016004019392505050565b600082516200167a81846020870162001331565b9190910192915050565b6000602082840312156200169757600080fd5b81518015158114620016a857600080fd5b9392505050565b60408152600560408201526422b93937b960d91b6060820152608060208201526000620016a860808301846200135756fe60806040523480156200001157600080fd5b5060405162000e3d38038062000e3d833981016040819052620000349162000232565b6040518060400160405280600b81526020016a36b2b935b632aa37b5b2b760a91b81525060405180604001604052806002815260200161135560f21b8152508160039081620000849190620002f1565b506004620000938282620002f1565b505050620000b4336b033b2e3c9fd0803ce8000000620000bd60201b60201c565b600555620003e5565b6001600160a01b038216620000ed5760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b620000fb60008383620000ff565b5050565b6001600160a01b0383166200012e578060026000828254620001229190620003bd565b90915550620001a29050565b6001600160a01b03831660009081526020819052604090205481811015620001835760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000e4565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620001c057600280548290039055620001df565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200022591815260200190565b60405180910390a3505050565b6000602082840312156200024557600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200027757607f821691505b6020821081036200029857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002ec57600081815260208120601f850160051c81016020861015620002c75750805b601f850160051c820191505b81811015620002e857828155600101620002d3565b5050505b505050565b81516001600160401b038111156200030d576200030d6200024c565b62000325816200031e845462000262565b846200029e565b602080601f8311600181146200035d5760008415620003445750858301515b600019600386901b1c1916600185901b178555620002e8565b600085815260208120601f198616915b828110156200038e578886015182559484019460019091019084016200036d565b5085821015620003ad5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620003df57634e487b7160e01b600052601160045260246000fd5b92915050565b610a4880620003f56000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633d13f874116100715780633d13f8741461012357806370a082311461013857806395d89b4114610161578063a9059cbb14610169578063dd62ed3e1461017c578063ebf0c717146101b557600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101be565b6040516100c39190610772565b60405180910390f35b6100df6100da3660046107dc565b610250565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610806565b61026a565b604051601281526020016100c3565b610136610131366004610858565b61028e565b005b6100f3610146366004610932565b6001600160a01b031660009081526020819052604090205490565b6100b66103d2565b6100df6101773660046107dc565b6103e1565b6100f361018a36600461094d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6100f360055481565b6060600380546101cd90610980565b80601f01602080910402602001604051908101604052809291908181526020018280546101f990610980565b80156102465780601f1061021b57610100808354040283529160200191610246565b820191906000526020600020905b81548152906001019060200180831161022957829003601f168201915b5050505050905090565b60003361025e8185856103ef565b60019150505b92915050565b600033610278858285610401565b61028385858561047f565b506001949350505050565b6001600160a01b03831660009081526006602052604090205460ff16156102ef5760405162461bcd60e51b815260206004820152601060248201526f185b1c9958591e481c9958d95a5d995960821b60448201526064015b60405180910390fd5b6040516bffffffffffffffffffffffff19606085901b16602082015260348101839052600090605401604051602081830303815290604052805190602001209050600061033f83600554846104de565b9050801561039d5760405162461bcd60e51b815260206004820152602560248201527f596f7520617265206e6f7420616c6c6f77656420746f207265636569766520746044820152646f6b656e7360d81b60648201526084016102e6565b6001600160a01b0385166000908152600660205260409020805460ff191660011790556103ca85856103e1565b505050505050565b6060600480546101cd90610980565b60003361025e81858561047f565b6103fc83838360016104f4565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610479578181101561046a57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016102e6565b610479848484840360006104f4565b50505050565b6001600160a01b0383166104a957604051634b637e8f60e11b8152600060048201526024016102e6565b6001600160a01b0382166104d35760405163ec442f0560e01b8152600060048201526024016102e6565b6103fc8383836105c9565b6000826104eb85846106f3565b14949350505050565b6001600160a01b03841661051e5760405163e602df0560e01b8152600060048201526024016102e6565b6001600160a01b03831661054857604051634a1406b160e11b8152600060048201526024016102e6565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561047957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105bb91815260200190565b60405180910390a350505050565b6001600160a01b0383166105f45780600260008282546105e991906109d0565b909155506106669050565b6001600160a01b038316600090815260208190526040902054818110156106475760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102e6565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610682576002805482900390556106a1565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106e691815260200190565b60405180910390a3505050565b600081815b84518110156107385761072482868381518110610717576107176109e3565b6020026020010151610740565b915080610730816109f9565b9150506106f8565b509392505050565b600081831061075c57600082815260208490526040902061076b565b60008381526020839052604090205b9392505050565b600060208083528351808285015260005b8181101561079f57858101830151858201604001528201610783565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107d757600080fd5b919050565b600080604083850312156107ef57600080fd5b6107f8836107c0565b946020939093013593505050565b60008060006060848603121561081b57600080fd5b610824846107c0565b9250610832602085016107c0565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561086d57600080fd5b610876846107c0565b92506020808501359250604085013567ffffffffffffffff8082111561089b57600080fd5b818701915087601f8301126108af57600080fd5b8135818111156108c1576108c1610842565b8060051b604051601f19603f830116810181811085821117156108e6576108e6610842565b60405291825284820192508381018501918a83111561090457600080fd5b938501935b8285101561092257843584529385019392850192610909565b8096505050505050509250925092565b60006020828403121561094457600080fd5b61076b826107c0565b6000806040838503121561096057600080fd5b610969836107c0565b9150610977602084016107c0565b90509250929050565b600181811c9082168061099457607f821691505b6020821081036109b457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610264576102646109ba565b634e487b7160e01b600052603260045260246000fd5b600060018201610a0b57610a0b6109ba565b506001019056fea26469706673582212207377157246a5be294ac55bd0f19761e0deb228e9a62f2c82bc5b9852f8c1a9d864736f6c63430008150033a2646970667358221220e15218068c6d31b61132f368e7c867f878b2ccc0c6abaf1b897a2f3b2c7692e764736f6c63430008150033",
    "sourceMap": "219:2249:26:-:0;;;1572:26:1;;;1594:4;-1:-1:-1;;1572:26:1;;;;;;;;3126:44:4;;;;;;;;;;;219:2249:26;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001215760003560e01c806366d9a9a011620000af578063b5508aa9116200007a578063b5508aa91462000203578063ba414fa6146200020d578063e20c9f711462000228578063f33cf57b1462000232578063fa7626d4146200023c57600080fd5b806366d9a9a014620001bd5780637f5b7b9c14620001d657806385226c8114620001e0578063916a17c614620001f957600080fd5b806331edf2ea11620000f057806331edf2ea14620001955780633e5e3c23146200019f5780633f7286f414620001a95780634dd8980514620001b357600080fd5b80630a9254e414620001265780630d91f3d014620001325780631ed7831c14620001635780632ade3880146200017c575b600080fd5b620001306200024a565b005b601c5462000146906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6200016d620002c4565b6040516200015a9190620012e2565b6200018662000328565b6040516200015a919062001385565b6200013062000476565b6200016d620004cc565b6200016d6200052e565b6200013062000590565b620001c762000771565b6040516200015a91906200144b565b620001306200085b565b620001ea62000a1d565b6040516200015a919062001502565b620001c762000af7565b620001ea62000be1565b6200021762000cbb565b60405190151581526020016200015a565b6200016d62000df2565b6200013062000e54565b600754620002179060ff1681565b7f96af0c2fae069f9b01f02310bdd93634ed27b162d0ae24db1587a6258e1d01f2601d8190556040516200027e90620012d4565b908152602001604051809103906000f080158015620002a1573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b0392909216919091179055565b606060148054806020026020016040519081016040528092919081815260200182805480156200031e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620002ff575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200046d57600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562000455578382906000526020600020018054620003c19062001568565b80601f0160208091040260200160405190810160405280929190818152602001828054620003ef9062001568565b8015620004405780601f10620004145761010080835404028352916020019162000440565b820191906000526020600020905b8154815290600101906020018083116200042257829003601f168201915b5050505050815260200190600101906200039f565b5050505081525050815260200190600101906200034c565b50505050905090565b6200048062000e54565b6200048a62000e54565b620004ca6040518060400160405280601b81526020017f43616e742072656365697665206d6f7265207468616e206f6e6365000000000081525062001058565b565b606060168054806020026020016040519081016040528092919081815260200182805480156200031e576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620002ff575050505050905090565b606060158054806020026020016040519081016040528092919081815260200182805480156200031e576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620002ff575050505050905090565b60408051600380825260808201909252600091602082016060803683370190505090507fc38db87582dda0be501d2042fb49e20f7a9fc98397ae63a6b46ea3e20ee6161660001b81600081518110620005ed57620005ed620015a4565b6020026020010181815250507f7423d6d83607b81ac8afcc31122377e2bc6acf0bed2da4e33e06fad8f625020b60001b81600181518110620006335762000633620015a4565b6020026020010181815250507f47d79263b3efee4f4d9470121dcd87e2c20dbe7025531b813367b8ca7f3cc30a60001b81600281518110620006795762000679620015a4565b6020908102919091010152601c54604051630f44fe1d60e21b81526001600160a01b0390911690633d13f87490620006bc90600190600a908690600401620015ba565b600060405180830381600087803b158015620006d757600080fd5b505af1158015620006ec573d6000803e3d6000fd5b5050601c546040516370a0823160e01b8152600160048201526200076e93506001600160a01b0390911691506370a08231906024015b602060405180830381865afa15801562000740573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000766919062001619565b60006200109b565b50565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156200046d5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200084257602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620008035790505b5050505050815250508152602001906001019062000795565b60408051600380825260808201909252721daa61eaa241a8d89607194fc3b1184dcb9b4c9160009190602082016060803683370190505090507fc38db87582dda0be501d2042fb49e20f7a9fc98397ae63a6b46ea3e20ee6161660001b81600081518110620008ce57620008ce620015a4565b6020026020010181815250507f7423d6d83607b81ac8afcc31122377e2bc6acf0bed2da4e33e06fad8f625020b60001b81600181518110620009145762000914620015a4565b6020026020010181815250507f49ac76360194e7eb3034deee26b2e080e6588a9c18e4d02580da7ac7fc42687760001b816002815181106200095a576200095a620015a4565b6020908102919091010152601c54604051630f44fe1d60e21b81526001600160a01b0390911690633d13f874906200099c908590600a908690600401620015ba565b600060405180830381600087803b158015620009b757600080fd5b505af1158015620009cc573d6000803e3d6000fd5b5050601c546040516370a0823160e01b8152721daa61eaa241a8d89607194fc3b1184dcb9b4c600482015262000a1993506001600160a01b0390911691506370a082319060240162000722565b5050565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156200046d57838290600052602060002001805462000a639062001568565b80601f016020809104026020016040519081016040528092919081815260200182805462000a919062001568565b801562000ae25780601f1062000ab65761010080835404028352916020019162000ae2565b820191906000526020600020905b81548152906001019060200180831162000ac457829003601f168201915b50505050508152602001906001019062000a41565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156200046d5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000bc857602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000b895790505b5050505050815250508152602001906001019062000b1b565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156200046d57838290600052602060002001805462000c279062001568565b80601f016020809104026020016040519081016040528092919081815260200182805462000c559062001568565b801562000ca65780601f1062000c7a5761010080835404028352916020019162000ca6565b820191906000526020600020905b81548152906001019060200180831162000c8857829003601f168201915b50505050508152602001906001019062000c05565b600754600090610100900460ff161562000cde5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000ded5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000d6f917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001633565b60408051601f198184030181529082905262000d8b9162001666565b6000604051808303816000865af19150503d806000811462000dca576040519150601f19603f3d011682016040523d82523d6000602084013e62000dcf565b606091505b509150508080602001905181019062000de9919062001684565b9150505b919050565b606060138054806020026020016040519081016040528092919081815260200182805480156200031e576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620002ff575050505050905090565b60408051600380825260808201909252721daa61eaa241a8d89607194fc3b1184dcb9b4c9160009190602082016060803683370190505090507fc38db87582dda0be501d2042fb49e20f7a9fc98397ae63a6b46ea3e20ee6161660001b8160008151811062000ec75762000ec7620015a4565b6020026020010181815250507f7423d6d83607b81ac8afcc31122377e2bc6acf0bed2da4e33e06fad8f625020b60001b8160018151811062000f0d5762000f0d620015a4565b6020026020010181815250507f47d79263b3efee4f4d9470121dcd87e2c20dbe7025531b813367b8ca7f3cc30a60001b8160028151811062000f535762000f53620015a4565b6020908102919091010152601c54604051630f44fe1d60e21b81526001600160a01b0390911690633d13f8749062000f95908590600a908690600401620015ba565b600060405180830381600087803b15801562000fb057600080fd5b505af115801562000fc5573d6000803e3d6000fd5b5050601c546040516370a0823160e01b8152721daa61eaa241a8d89607194fc3b1184dcb9b4c600482015262000a1993506001600160a01b0390911691506370a0823190602401602060405180830381865afa1580156200102a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001050919062001619565b600a6200109b565b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051620010899190620016af565b60405180910390a16200076e620011c1565b80821462000a19577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200110e9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a162000a195b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620012c35760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526200125e929160200162001633565b60408051601f19818403018152908290526200127a9162001666565b6000604051808303816000865af19150503d8060008114620012b9576040519150601f19603f3d011682016040523d82523d6000602084013e620012be565b606091505b505050505b6007805461ff001916610100179055565b610e3d80620016e183390190565b6020808252825182820181905260009190848201906040850190845b81811015620013255783516001600160a01b031683529284019291840191600101620012fe565b50909695505050505050565b60005b838110156200134e57818101518382015260200162001334565b50506000910152565b600081518084526200137181602086016020860162001331565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b858110156200143b57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b818110156200142457605f198985030183526200141184865162001357565b948e01949350918d0191600101620013f2565b505050978a019794505091880191600101620013ac565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015620014f357898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620014dd5783516001600160e01b0319168252928b019260019290920191908b0190620014b1565b50978a0197955050509187019160010162001473565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200155b57603f198886030184526200154885835162001357565b9450928501929085019060010162001529565b5092979650505050505050565b600181811c908216806200157d57607f821691505b6020821081036200159e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038416815260208082018490526060604083018190528351908301819052600091848101916080850190845b818110156200160b57845183529383019391830191600101620015ed565b509098975050505050505050565b6000602082840312156200162c57600080fd5b5051919050565b6001600160e01b03198316815281516000906200165881600485016020870162001331565b919091016004019392505050565b600082516200167a81846020870162001331565b9190910192915050565b6000602082840312156200169757600080fd5b81518015158114620016a857600080fd5b9392505050565b60408152600560408201526422b93937b960d91b6060820152608060208201526000620016a860808301846200135756fe60806040523480156200001157600080fd5b5060405162000e3d38038062000e3d833981016040819052620000349162000232565b6040518060400160405280600b81526020016a36b2b935b632aa37b5b2b760a91b81525060405180604001604052806002815260200161135560f21b8152508160039081620000849190620002f1565b506004620000938282620002f1565b505050620000b4336b033b2e3c9fd0803ce8000000620000bd60201b60201c565b600555620003e5565b6001600160a01b038216620000ed5760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b620000fb60008383620000ff565b5050565b6001600160a01b0383166200012e578060026000828254620001229190620003bd565b90915550620001a29050565b6001600160a01b03831660009081526020819052604090205481811015620001835760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000e4565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620001c057600280548290039055620001df565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200022591815260200190565b60405180910390a3505050565b6000602082840312156200024557600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200027757607f821691505b6020821081036200029857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002ec57600081815260208120601f850160051c81016020861015620002c75750805b601f850160051c820191505b81811015620002e857828155600101620002d3565b5050505b505050565b81516001600160401b038111156200030d576200030d6200024c565b62000325816200031e845462000262565b846200029e565b602080601f8311600181146200035d5760008415620003445750858301515b600019600386901b1c1916600185901b178555620002e8565b600085815260208120601f198616915b828110156200038e578886015182559484019460019091019084016200036d565b5085821015620003ad5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620003df57634e487b7160e01b600052601160045260246000fd5b92915050565b610a4880620003f56000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633d13f874116100715780633d13f8741461012357806370a082311461013857806395d89b4114610161578063a9059cbb14610169578063dd62ed3e1461017c578063ebf0c717146101b557600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101be565b6040516100c39190610772565b60405180910390f35b6100df6100da3660046107dc565b610250565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610806565b61026a565b604051601281526020016100c3565b610136610131366004610858565b61028e565b005b6100f3610146366004610932565b6001600160a01b031660009081526020819052604090205490565b6100b66103d2565b6100df6101773660046107dc565b6103e1565b6100f361018a36600461094d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6100f360055481565b6060600380546101cd90610980565b80601f01602080910402602001604051908101604052809291908181526020018280546101f990610980565b80156102465780601f1061021b57610100808354040283529160200191610246565b820191906000526020600020905b81548152906001019060200180831161022957829003601f168201915b5050505050905090565b60003361025e8185856103ef565b60019150505b92915050565b600033610278858285610401565b61028385858561047f565b506001949350505050565b6001600160a01b03831660009081526006602052604090205460ff16156102ef5760405162461bcd60e51b815260206004820152601060248201526f185b1c9958591e481c9958d95a5d995960821b60448201526064015b60405180910390fd5b6040516bffffffffffffffffffffffff19606085901b16602082015260348101839052600090605401604051602081830303815290604052805190602001209050600061033f83600554846104de565b9050801561039d5760405162461bcd60e51b815260206004820152602560248201527f596f7520617265206e6f7420616c6c6f77656420746f207265636569766520746044820152646f6b656e7360d81b60648201526084016102e6565b6001600160a01b0385166000908152600660205260409020805460ff191660011790556103ca85856103e1565b505050505050565b6060600480546101cd90610980565b60003361025e81858561047f565b6103fc83838360016104f4565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610479578181101561046a57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016102e6565b610479848484840360006104f4565b50505050565b6001600160a01b0383166104a957604051634b637e8f60e11b8152600060048201526024016102e6565b6001600160a01b0382166104d35760405163ec442f0560e01b8152600060048201526024016102e6565b6103fc8383836105c9565b6000826104eb85846106f3565b14949350505050565b6001600160a01b03841661051e5760405163e602df0560e01b8152600060048201526024016102e6565b6001600160a01b03831661054857604051634a1406b160e11b8152600060048201526024016102e6565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561047957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105bb91815260200190565b60405180910390a350505050565b6001600160a01b0383166105f45780600260008282546105e991906109d0565b909155506106669050565b6001600160a01b038316600090815260208190526040902054818110156106475760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102e6565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610682576002805482900390556106a1565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106e691815260200190565b60405180910390a3505050565b600081815b84518110156107385761072482868381518110610717576107176109e3565b6020026020010151610740565b915080610730816109f9565b9150506106f8565b509392505050565b600081831061075c57600082815260208490526040902061076b565b60008381526020839052604090205b9392505050565b600060208083528351808285015260005b8181101561079f57858101830151858201604001528201610783565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107d757600080fd5b919050565b600080604083850312156107ef57600080fd5b6107f8836107c0565b946020939093013593505050565b60008060006060848603121561081b57600080fd5b610824846107c0565b9250610832602085016107c0565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561086d57600080fd5b610876846107c0565b92506020808501359250604085013567ffffffffffffffff8082111561089b57600080fd5b818701915087601f8301126108af57600080fd5b8135818111156108c1576108c1610842565b8060051b604051601f19603f830116810181811085821117156108e6576108e6610842565b60405291825284820192508381018501918a83111561090457600080fd5b938501935b8285101561092257843584529385019392850192610909565b8096505050505050509250925092565b60006020828403121561094457600080fd5b61076b826107c0565b6000806040838503121561096057600080fd5b610969836107c0565b9150610977602084016107c0565b90509250929050565b600181811c9082168061099457607f821691505b6020821081036109b457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610264576102646109ba565b634e487b7160e01b600052603260045260246000fd5b600060018201610a0b57610a0b6109ba565b506001019056fea26469706673582212207377157246a5be294ac55bd0f19761e0deb228e9a62f2c82bc5b9852f8c1a9d864736f6c63430008150033a2646970667358221220e15218068c6d31b61132f368e7c867f878b2ccc0c6abaf1b897a2f3b2c7692e764736f6c63430008150033",
    "sourceMap": "219:2249:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;308:159;;;:::i;:::-;;253:30;;;;;-1:-1:-1;;;;;253:30:26;;;;;;-1:-1:-1;;;;;196:32:27;;;178:51;;166:2;151:18;253:30:26;;;;;;;;2452:134:7;;;:::i;:::-;;;;;;;:::i;3360:151::-;;;:::i;:::-;;;;;;;:::i;2335:131:26:-;;;:::i;3221:133:7:-;;;:::i;2922:141::-;;;:::i;1130:536:26:-;;;:::i;2738:178:7:-;;;:::i;:::-;;;;;;;:::i;1672:657:26:-;;;:::i;2592:140:7:-;;;:::i;:::-;;;;;;;:::i;3069:146::-;;;:::i;2157:141::-;;;:::i;1819:584:1:-;;;:::i;:::-;;;5726:14:27;;5719:22;5701:41;;5689:2;5674:18;1819:584:1;5561:187:27;2304:142:7;;;:::i;473:651:26:-;;;:::i;1572:26:1:-;;;;;;;;;308:159:26;349:66;342:4;:73;;;439:21;;;;;:::i;:::-;5899:25:27;;;5887:2;5872:18;439:21:26;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;425:11:26;:35;;-1:-1:-1;;;;;;425:35:26;-1:-1:-1;;;;;425:35:26;;;;;;;;;;308:159::o;2452:134:7:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:7;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;3360:151::-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;2335:131:26:-;2382:11;:9;:11::i;:::-;2403;:9;:11::i;:::-;2424:35;;;;;;;;;;;;;;;;;;:4;:35::i;:::-;2335:131::o;3221:133:7:-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:7;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:7;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;1130:536:26:-;1209:16;;;1223:1;1209:16;;;;;;;;;1184:22;;1209:16;;;;;;;;;;-1:-1:-1;1209:16:26;1184:41;;1268:66;1235:99;;:5;1254:1;1235:30;;;;;;;;:::i;:::-;;;;;;:99;;;;;1377:66;1344:99;;:5;1363:1;1344:30;;;;;;;;:::i;:::-;;;;;;:99;;;;;1487:66;1454:99;;:5;1473:1;1454:30;;;;;;;;:::i;:::-;;;;;;;;;;:99;1563:11;;:40;;-1:-1:-1;;;1563:40:26;;-1:-1:-1;;;;;1563:11:26;;;;:17;;:40;;:11;;1593:2;;1597:5;;1563:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1622:11:26;;:33;;-1:-1:-1;;;1622:33:26;;:11;:33;;;178:51:27;1613:46:26;;-1:-1:-1;;;;;;1622:11:26;;;;-1:-1:-1;1622:21:26;;151:18:27;;1622:33:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1657:1;1613:8;:46::i;:::-;1174:492;1130:536::o;2738:178:7:-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1672:657:26;1810:16;;;1824:1;1810:16;;;;;;;;;1733:42;;1717:13;;1810:16;;;;;;;;;;;-1:-1:-1;1810:16:26;1785:41;;1869:66;1836:99;;:5;1855:1;1836:30;;;;;;;;:::i;:::-;;;;;;:99;;;;;1978:66;1945:99;;:5;1964:1;1945:30;;;;;;;;:::i;:::-;;;;;;:99;;;;;2088:66;2055:99;;:5;2074:1;2055:30;;;;;;;;:::i;:::-;;;;;;;;;;:99;2164:11;;:35;;-1:-1:-1;;;2164:35:26;;-1:-1:-1;;;;;2164:11:26;;;;:17;;:35;;2182:5;;2189:2;;2193:5;;2164:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2232:11:26;;:65;;-1:-1:-1;;;2232:65:26;;2254:42;2232:65;;;178:51:27;2210:112:26;;-1:-1:-1;;;;;;2232:11:26;;;;-1:-1:-1;2232:21:26;;151:18:27;;2232:65:26;14:221:27;2210:112:26;1707:622;;1672:657::o;2592:140:7:-;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3069:146;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2157:141;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:1;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:1;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;7970:51:27;;;-1:-1:-1;;;8037:18:27;;;8030:34;2196:43:1;;;;;;;;;7943:18:27;;;2196:43:1;;;-1:-1:-1;;1671:64:1;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:1;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:1:o;2304:142:7:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:7;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;473:651:26:-;604:16;;;618:1;604:16;;;;;;;;;527:42;;511:13;;604:16;;;;;;;;;;;-1:-1:-1;604:16:26;579:41;;663:66;630:99;;:5;649:1;630:30;;;;;;;;:::i;:::-;;;;;;:99;;;;;772:66;739:99;;:5;758:1;739:30;;;;;;;;:::i;:::-;;;;;;:99;;;;;882:66;849:99;;:5;868:1;849:30;;;;;;;;:::i;:::-;;;;;;;;;;:99;958:11;;:35;;-1:-1:-1;;;958:35:26;;-1:-1:-1;;;;;958:11:26;;;;:17;;:35;;976:5;;983:2;;987:5;;958:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1026:11:26;;:65;;-1:-1:-1;;;1026:65:26;;1048:42;1026:65;;;178:51:27;1004:113:26;;-1:-1:-1;;;;;;1026:11:26;;;;-1:-1:-1;1026:21:26;;151:18:27;;1026:65:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1105:2;1004:8;:113::i;463:118:3:-;528:30;554:3;528:30;;;;;;:::i;:::-;;;;;;;;568:6;:4;:6::i;5209:262:1:-;5271:1;5266;:6;5262:203;;5293:41;;;;;9691:2:27;9673:21;;;9730:2;9710:18;;;9703:30;9769:34;9764:2;9749:18;;9742:62;-1:-1:-1;;;9835:2:27;9820:18;;9813:32;9877:3;9862:19;;9489:398;5293:41:1;;;;;;;;5353:31;;;10104:21:27;;;10161:2;10141:18;;;10134:30;-1:-1:-1;;;10195:2:27;10180:18;;10173:40;10280:4;10265:20;;10258:36;;;5353:31:1;;;;;;;10245:3:27;5353:31:1;;;5403;;;10517:21:27;;;10574:2;10554:18;;;10547:30;-1:-1:-1;;;10608:2:27;10593:18;;10586:40;10693:4;10678:20;;10671:36;;;5403:31:1;;;;;;;10658:3:27;5403:31:1;;;5448:6;2409:432;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;10920:51:27;;;-1:-1:-1;;;10987:18:27;;;10980:34;;;;2712:4:1;11030:18:27;;;11023:34;2489:11:1;;1671:64;2586:43;;10893:18:27;;2652:67:1;;;-1:-1:-1;;2652:67:1;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:1;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:1;2820:7;:14;;-1:-1:-1;;2820:14:1;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;240:658:27:-;411:2;463:21;;;533:13;;436:18;;;555:22;;;382:4;;411:2;634:15;;;;608:2;593:18;;;382:4;677:195;691:6;688:1;685:13;677:195;;;756:13;;-1:-1:-1;;;;;752:39:27;740:52;;847:15;;;;812:12;;;;788:1;706:9;677:195;;;-1:-1:-1;889:3:27;;240:658;-1:-1:-1;;;;;;240:658:27:o;903:250::-;988:1;998:113;1012:6;1009:1;1006:13;998:113;;;1088:11;;;1082:18;1069:11;;;1062:39;1034:2;1027:10;998:113;;;-1:-1:-1;;1145:1:27;1127:16;;1120:27;903:250::o;1158:271::-;1200:3;1238:5;1232:12;1265:6;1260:3;1253:19;1281:76;1350:6;1343:4;1338:3;1334:14;1327:4;1320:5;1316:16;1281:76;:::i;:::-;1411:2;1390:15;-1:-1:-1;;1386:29:27;1377:39;;;;1418:4;1373:50;;1158:271;-1:-1:-1;;1158:271:27:o;1434:1742::-;1667:2;1719:21;;;1789:13;;1692:18;;;1811:22;;;1638:4;;1667:2;1852;;1870:18;;;;1907:1;1950:15;;;1935:31;;1931:40;;1994:15;;;1638:4;;2058:1089;2074:6;2069:3;2066:15;2058:1089;;;-1:-1:-1;;2143:22:27;;;2139:36;2127:49;;2199:13;;2286:9;;-1:-1:-1;;;;;2282:35:27;2267:51;;2357:11;;2351:18;2389:15;;;2382:27;;;2470:19;;2239:15;;;2502:24;;;2683:21;;;;2549:2;2631:17;;;2619:30;;2615:39;;;2573:15;;;;2728:1;2742:296;2758:8;2753:3;2750:17;2742:296;;;2864:2;2860:7;2851:6;2843;2839:19;2835:33;2828:5;2821:48;2896:42;2931:6;2920:8;2914:15;2896:42;:::i;:::-;2967:17;;;;2886:52;-1:-1:-1;3010:14:27;;;;2786:1;2777:11;2742:296;;;-1:-1:-1;;;3125:12:27;;;;3061:6;-1:-1:-1;;3090:15:27;;;;2100:1;2091:11;2058:1089;;;-1:-1:-1;3164:6:27;;1434:1742;-1:-1:-1;;;;;;;;;;1434:1742:27:o;3181:1567::-;3383:4;3412:2;3452;3441:9;3437:18;3482:2;3471:9;3464:21;3505:6;3540;3534:13;3571:6;3563;3556:22;3597:2;3587:12;;3630:2;3619:9;3615:18;3608:25;;3692:2;3682:6;3679:1;3675:14;3664:9;3660:30;3656:39;3730:2;3722:6;3718:15;3751:1;3772;3782:937;3798:6;3793:3;3790:15;3782:937;;;3867:22;;;-1:-1:-1;;3863:36:27;3851:49;;3923:13;;4010:9;;-1:-1:-1;;;;;4006:35:27;3991:51;;4081:11;;4075:18;4113:15;;;4106:27;;;4194:19;;3963:15;;;4226:24;;;4316:21;;;;4361:1;;4284:2;4272:15;;;4375:236;4391:8;4386:3;4383:17;4375:236;;;4472:15;;-1:-1:-1;;;;;;4468:42:27;4454:57;;4580:17;;;;4419:1;4410:11;;;;;4537:14;;;;4375:236;;;-1:-1:-1;4697:12:27;;;;4634:5;-1:-1:-1;;;4662:15:27;;;;3824:1;3815:11;3782:937;;;-1:-1:-1;4736:6:27;;3181:1567;-1:-1:-1;;;;;;;;;3181:1567:27:o;4753:803::-;4915:4;4944:2;4984;4973:9;4969:18;5014:2;5003:9;4996:21;5037:6;5072;5066:13;5103:6;5095;5088:22;5141:2;5130:9;5126:18;5119:25;;5203:2;5193:6;5190:1;5186:14;5175:9;5171:30;5167:39;5153:53;;5241:2;5233:6;5229:15;5262:1;5272:255;5286:6;5283:1;5280:13;5272:255;;;5379:2;5375:7;5363:9;5355:6;5351:22;5347:36;5342:3;5335:49;5407:40;5440:6;5431;5425:13;5407:40;:::i;:::-;5397:50;-1:-1:-1;5505:12:27;;;;5470:15;;;;5308:1;5301:9;5272:255;;;-1:-1:-1;5544:6:27;;4753:803;-1:-1:-1;;;;;;;4753:803:27:o;5935:380::-;6014:1;6010:12;;;;6057;;;6078:61;;6132:4;6124:6;6120:17;6110:27;;6078:61;6185:2;6177:6;6174:14;6154:18;6151:38;6148:161;;6231:10;6226:3;6222:20;6219:1;6212:31;6266:4;6263:1;6256:15;6294:4;6291:1;6284:15;6148:161;;5935:380;;;:::o;6452:127::-;6513:10;6508:3;6504:20;6501:1;6494:31;6544:4;6541:1;6534:15;6568:4;6565:1;6558:15;6584:810;-1:-1:-1;;;;;6869:32:27;;6851:51;;6921:2;6939:18;;;6932:34;;;6839:2;6997;6982:18;;6975:30;;;7054:13;;6824:18;;;7076:22;;;6791:4;;7156:15;;;;7129:3;7114:19;;;6791:4;7199:169;7213:6;7210:1;7207:13;7199:169;;;7274:13;;7262:26;;7343:15;;;;7308:12;;;;7235:1;7228:9;7199:169;;;-1:-1:-1;7385:3:27;;6584:810;-1:-1:-1;;;;;;;;6584:810:27:o;7607:184::-;7677:6;7730:2;7718:9;7709:7;7705:23;7701:32;7698:52;;;7746:1;7743;7736:12;7698:52;-1:-1:-1;7769:16:27;;7607:184;-1:-1:-1;7607:184:27:o;8075:384::-;-1:-1:-1;;;;;;8260:33:27;;8248:46;;8317:13;;8230:3;;8339:74;8317:13;8402:1;8393:11;;8386:4;8374:17;;8339:74;:::i;:::-;8433:16;;;;8451:1;8429:24;;8075:384;-1:-1:-1;;;8075:384:27:o;8464:287::-;8593:3;8631:6;8625:13;8647:66;8706:6;8701:3;8694:4;8686:6;8682:17;8647:66;:::i;:::-;8729:16;;;;;8464:287;-1:-1:-1;;8464:287:27:o;8756:277::-;8823:6;8876:2;8864:9;8855:7;8851:23;8847:32;8844:52;;;8892:1;8889;8882:12;8844:52;8924:9;8918:16;8977:5;8970:13;8963:21;8956:5;8953:32;8943:60;;8999:1;8996;8989:12;8943:60;9022:5;8756:277;-1:-1:-1;;;8756:277:27:o;9038:446::-;9288:2;9277:9;9270:21;9327:1;9322:2;9311:9;9307:18;9300:29;-1:-1:-1;;;9360:2:27;9349:9;9345:18;9338:35;9411:3;9404:4;9393:9;9389:20;9382:33;9251:4;9432:46;9473:3;9462:9;9458:19;9450:6;9432:46;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "merkleToken()": "0d91f3d0",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testClaim()": "f33cf57b",
    "testFailBadProof()": "7f5b7b9c",
    "testFailClaimTwice()": "31edf2ea",
    "testFailNotAllowedAddress()": "4dd89805"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleToken\",\"outputs\":[{\"internalType\":\"contract MerkleToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFailBadProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFailClaimTwice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFailNotAllowedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Merkle.t.sol\":\"MerkleTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/MerkleToken.sol\":{\"keccak256\":\"0xffa8315e4394ef85455012d5da3aa3ce2504fc0066854a4b414435a0cc175cab\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4da5ba52364f5d070a505ff1bfe9ee7462993ca9dd2998561c7f8aa60bf65c71\",\"dweb:/ipfs/QmeLP2JksXhSCCQsweCg1Z2cpSgeAMxd8fFshBSdHcvFPW\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1\",\"dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e\",\"dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155\",\"dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]},\"src/Counter.sol\":{\"keccak256\":\"0x09277f949d59a9521708c870dc39c2c434ad8f86a5472efda6a732ef728c0053\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://94cd5258357da018bf911aeda60ed9f5b130dce27445669ee200313cd3389200\",\"dweb:/ipfs/QmNbEfWAqXCtfQpk6u7TpGa8sTHXFLpUz7uebz2FVbchSC\"]},\"test/Merkle.t.sol\":{\"keccak256\":\"0x1013e482b025c91049e793e07bc2836ac28430c998c80a385c86aa3193c25af5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://95d0b64f8e77f57982b13a05e6eaf9cdd608a521e167b13eabeacccd1788f5ab\",\"dweb:/ipfs/Qmed5U8Y8mfEmVeprPwPaMWnui6KGUmLUSXnGkPawr8FvX\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "merkleToken",
          "outputs": [
            {
              "internalType": "contract MerkleToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testClaim"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFailBadProof"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFailClaimTwice"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFailNotAllowedAddress"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Merkle.t.sol": "MerkleTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/MerkleToken.sol": {
        "keccak256": "0xffa8315e4394ef85455012d5da3aa3ce2504fc0066854a4b414435a0cc175cab",
        "urls": [
          "bzz-raw://4da5ba52364f5d070a505ff1bfe9ee7462993ca9dd2998561c7f8aa60bf65c71",
          "dweb:/ipfs/QmeLP2JksXhSCCQsweCg1Z2cpSgeAMxd8fFshBSdHcvFPW"
        ],
        "license": "UNLICENSED"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8",
        "urls": [
          "bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1",
          "dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d",
        "urls": [
          "bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e",
          "dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68",
        "urls": [
          "bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155",
          "dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058",
        "urls": [
          "bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac",
          "dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR"
        ],
        "license": "MIT"
      },
      "src/Counter.sol": {
        "keccak256": "0x09277f949d59a9521708c870dc39c2c434ad8f86a5472efda6a732ef728c0053",
        "urls": [
          "bzz-raw://94cd5258357da018bf911aeda60ed9f5b130dce27445669ee200313cd3389200",
          "dweb:/ipfs/QmNbEfWAqXCtfQpk6u7TpGa8sTHXFLpUz7uebz2FVbchSC"
        ],
        "license": "UNLICENSED"
      },
      "test/Merkle.t.sol": {
        "keccak256": "0x1013e482b025c91049e793e07bc2836ac28430c998c80a385c86aa3193c25af5",
        "urls": [
          "bzz-raw://95d0b64f8e77f57982b13a05e6eaf9cdd608a521e167b13eabeacccd1788f5ab",
          "dweb:/ipfs/Qmed5U8Y8mfEmVeprPwPaMWnui6KGUmLUSXnGkPawr8FvX"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Merkle.t.sol",
    "id": 44983,
    "exportedSymbols": {
      "Counter": [
        44774
      ],
      "MerkleTest": [
        44982
      ],
      "MerkleToken": [
        88
      ],
      "Test": [
        12304
      ],
      "console2": [
        30199
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2430:26",
    "nodes": [
      {
        "id": 44776,
        "nodeType": "PragmaDirective",
        "src": "39:24:26",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 44779,
        "nodeType": "ImportDirective",
        "src": "65:50:26",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44983,
        "sourceUnit": 12305,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44777,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12304,
              "src": "73:4:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44778,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30199,
              "src": "79:8:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44781,
        "nodeType": "ImportDirective",
        "src": "116:43:26",
        "nodes": [],
        "absolutePath": "src/Counter.sol",
        "file": "../src/Counter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44983,
        "sourceUnit": 44775,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44780,
              "name": "Counter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44774,
              "src": "124:7:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44783,
        "nodeType": "ImportDirective",
        "src": "160:57:26",
        "nodes": [],
        "absolutePath": "contracts/MerkleToken.sol",
        "file": "../contracts/MerkleToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44983,
        "sourceUnit": 89,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44782,
              "name": "MerkleToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 88,
              "src": "168:11:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44982,
        "nodeType": "ContractDefinition",
        "src": "219:2249:26",
        "nodes": [
          {
            "id": 44788,
            "nodeType": "VariableDeclaration",
            "src": "253:30:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "0d91f3d0",
            "mutability": "mutable",
            "name": "merkleToken",
            "nameLocation": "272:11:26",
            "scope": 44982,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MerkleToken_$88",
              "typeString": "contract MerkleToken"
            },
            "typeName": {
              "id": 44787,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44786,
                "name": "MerkleToken",
                "nameLocations": [
                  "253:11:26"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 88,
                "src": "253:11:26"
              },
              "referencedDeclaration": 88,
              "src": "253:11:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MerkleToken_$88",
                "typeString": "contract MerkleToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44790,
            "nodeType": "VariableDeclaration",
            "src": "289:12:26",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "root",
            "nameLocation": "297:4:26",
            "scope": 44982,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 44789,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "289:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44806,
            "nodeType": "FunctionDefinition",
            "src": "308:159:26",
            "nodes": [],
            "body": {
              "id": 44805,
              "nodeType": "Block",
              "src": "332:135:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44793,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44790,
                      "src": "342:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307839366166306332666165303639663962303166303233313062646439333633346564323762313632643061653234646231353837613632353865316430316632",
                      "id": 44794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "349:66:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_68156209630226893839833479597757819475786642384272337052906549478232243896818_by_1",
                        "typeString": "int_const 6815...(69 digits omitted)...6818"
                      },
                      "value": "0x96af0c2fae069f9b01f02310bdd93634ed27b162d0ae24db1587a6258e1d01f2"
                    },
                    "src": "342:73:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 44796,
                  "nodeType": "ExpressionStatement",
                  "src": "342:73:26"
                },
                {
                  "expression": {
                    "id": 44803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44797,
                      "name": "merkleToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44788,
                      "src": "425:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MerkleToken_$88",
                        "typeString": "contract MerkleToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 44801,
                          "name": "root",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44790,
                          "src": "455:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 44800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "439:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_bytes32_$returns$_t_contract$_MerkleToken_$88_$",
                          "typeString": "function (bytes32) returns (contract MerkleToken)"
                        },
                        "typeName": {
                          "id": 44799,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 44798,
                            "name": "MerkleToken",
                            "nameLocations": [
                              "443:11:26"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 88,
                            "src": "443:11:26"
                          },
                          "referencedDeclaration": 88,
                          "src": "443:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MerkleToken_$88",
                            "typeString": "contract MerkleToken"
                          }
                        }
                      },
                      "id": 44802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "439:21:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MerkleToken_$88",
                        "typeString": "contract MerkleToken"
                      }
                    },
                    "src": "425:35:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MerkleToken_$88",
                      "typeString": "contract MerkleToken"
                    }
                  },
                  "id": 44804,
                  "nodeType": "ExpressionStatement",
                  "src": "425:35:26"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "317:5:26",
            "parameters": {
              "id": 44791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "322:2:26"
            },
            "returnParameters": {
              "id": 44792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "332:0:26"
            },
            "scope": 44982,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44859,
            "nodeType": "FunctionDefinition",
            "src": "473:651:26",
            "nodes": [],
            "body": {
              "id": 44858,
              "nodeType": "Block",
              "src": "501:623:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    44810
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44810,
                      "mutability": "mutable",
                      "name": "acct1",
                      "nameLocation": "519:5:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 44858,
                      "src": "511:13:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 44809,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "511:7:26",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44812,
                  "initialValue": {
                    "hexValue": "307830303144616136314561613234314138443839363037313934464333623131383464634239423443",
                    "id": 44811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "527:42:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x001Daa61Eaa241A8D89607194FC3b1184dcB9B4C"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "511:58:26"
                },
                {
                  "assignments": [
                    44817
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44817,
                      "mutability": "mutable",
                      "name": "proof",
                      "nameLocation": "596:5:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 44858,
                      "src": "579:22:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 44815,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "579:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 44816,
                        "nodeType": "ArrayTypeName",
                        "src": "579:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44823,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 44821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "618:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 44820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "604:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 44818,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "608:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 44819,
                        "nodeType": "ArrayTypeName",
                        "src": "608:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      }
                    },
                    "id": 44822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "604:16:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "579:41:26"
                },
                {
                  "expression": {
                    "id": 44828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44824,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44817,
                        "src": "630:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 44826,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 44825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "649:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "630:30:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307863333864623837353832646461306265353031643230343266623439653230663761396663393833393761653633613662343665613365323065653631363136",
                      "id": 44827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "663:66:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_88451403999294037792036426233273788035138811233763372650285275301913737696790_by_1",
                        "typeString": "int_const 8845...(69 digits omitted)...6790"
                      },
                      "value": "0xc38db87582dda0be501d2042fb49e20f7a9fc98397ae63a6b46ea3e20ee61616"
                    },
                    "src": "630:99:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 44829,
                  "nodeType": "ExpressionStatement",
                  "src": "630:99:26"
                },
                {
                  "expression": {
                    "id": 44834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44830,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44817,
                        "src": "739:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 44832,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 44831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "758:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "739:30:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307837343233643664383336303762383161633861666363333131323233373765326263366163663062656432646134653333653036666164386636323530323062",
                      "id": 44833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "772:66:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_52531612885682877015832737444870946753393484368508083069287983580769818051083_by_1",
                        "typeString": "int_const 5253...(69 digits omitted)...1083"
                      },
                      "value": "0x7423d6d83607b81ac8afcc31122377e2bc6acf0bed2da4e33e06fad8f625020b"
                    },
                    "src": "739:99:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 44835,
                  "nodeType": "ExpressionStatement",
                  "src": "739:99:26"
                },
                {
                  "expression": {
                    "id": 44840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44836,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44817,
                        "src": "849:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 44838,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 44837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "868:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "849:30:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307834376437393236336233656665653466346439343730313231646364383765326332306462653730323535333162383133333637623863613766336363333061",
                      "id": 44839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "882:66:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_32495094711290219730612230718484749970764870547751433547425551833763111813898_by_1",
                        "typeString": "int_const 3249...(69 digits omitted)...3898"
                      },
                      "value": "0x47d79263b3efee4f4d9470121dcd87e2c20dbe7025531b813367b8ca7f3cc30a"
                    },
                    "src": "849:99:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 44841,
                  "nodeType": "ExpressionStatement",
                  "src": "849:99:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44845,
                        "name": "acct1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44810,
                        "src": "976:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 44846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "983:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "id": 44847,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44817,
                        "src": "987:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "id": 44842,
                        "name": "merkleToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44788,
                        "src": "958:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MerkleToken_$88",
                          "typeString": "contract MerkleToken"
                        }
                      },
                      "id": 44844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "970:5:26",
                      "memberName": "claim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87,
                      "src": "958:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes32[] memory) external"
                      }
                    },
                    "id": 44848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "958:35:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44849,
                  "nodeType": "ExpressionStatement",
                  "src": "958:35:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "307830303144616136314561613234314138443839363037313934464333623131383464634239423443",
                            "id": 44853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1048:42:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0x001Daa61Eaa241A8D89607194FC3b1184dcB9B4C"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 44851,
                            "name": "merkleToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44788,
                            "src": "1026:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MerkleToken_$88",
                              "typeString": "contract MerkleToken"
                            }
                          },
                          "id": 44852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1038:9:26",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43675,
                          "src": "1026:21:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 44854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1026:65:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 44855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1105:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 44850,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2574,
                        2599,
                        2612,
                        2628,
                        2670,
                        2712,
                        2754,
                        2791,
                        2828,
                        2865,
                        409,
                        434,
                        464,
                        489,
                        548,
                        573,
                        603,
                        628,
                        2101,
                        2136
                      ],
                      "referencedDeclaration": 603,
                      "src": "1004:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1004:113:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44857,
                  "nodeType": "ExpressionStatement",
                  "src": "1004:113:26"
                }
              ]
            },
            "functionSelector": "f33cf57b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testClaim",
            "nameLocation": "482:9:26",
            "parameters": {
              "id": 44807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "491:2:26"
            },
            "returnParameters": {
              "id": 44808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "501:0:26"
            },
            "scope": 44982,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44914,
            "nodeType": "FunctionDefinition",
            "src": "1130:536:26",
            "nodes": [],
            "body": {
              "id": 44913,
              "nodeType": "Block",
              "src": "1174:492:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    44866
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44866,
                      "mutability": "mutable",
                      "name": "proof",
                      "nameLocation": "1201:5:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 44913,
                      "src": "1184:22:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 44864,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1184:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 44865,
                        "nodeType": "ArrayTypeName",
                        "src": "1184:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44872,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 44870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1223:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 44869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1209:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 44867,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1213:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 44868,
                        "nodeType": "ArrayTypeName",
                        "src": "1213:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      }
                    },
                    "id": 44871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1209:16:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1184:41:26"
                },
                {
                  "expression": {
                    "id": 44877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44873,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44866,
                        "src": "1235:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 44875,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 44874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1254:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1235:30:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307863333864623837353832646461306265353031643230343266623439653230663761396663393833393761653633613662343665613365323065653631363136",
                      "id": 44876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1268:66:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_88451403999294037792036426233273788035138811233763372650285275301913737696790_by_1",
                        "typeString": "int_const 8845...(69 digits omitted)...6790"
                      },
                      "value": "0xc38db87582dda0be501d2042fb49e20f7a9fc98397ae63a6b46ea3e20ee61616"
                    },
                    "src": "1235:99:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 44878,
                  "nodeType": "ExpressionStatement",
                  "src": "1235:99:26"
                },
                {
                  "expression": {
                    "id": 44883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44879,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44866,
                        "src": "1344:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 44881,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 44880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1363:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1344:30:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307837343233643664383336303762383161633861666363333131323233373765326263366163663062656432646134653333653036666164386636323530323062",
                      "id": 44882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1377:66:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_52531612885682877015832737444870946753393484368508083069287983580769818051083_by_1",
                        "typeString": "int_const 5253...(69 digits omitted)...1083"
                      },
                      "value": "0x7423d6d83607b81ac8afcc31122377e2bc6acf0bed2da4e33e06fad8f625020b"
                    },
                    "src": "1344:99:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 44884,
                  "nodeType": "ExpressionStatement",
                  "src": "1344:99:26"
                },
                {
                  "expression": {
                    "id": 44889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44885,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44866,
                        "src": "1454:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 44887,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 44886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1473:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1454:30:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307834376437393236336233656665653466346439343730313231646364383765326332306462653730323535333162383133333637623863613766336363333061",
                      "id": 44888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1487:66:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_32495094711290219730612230718484749970764870547751433547425551833763111813898_by_1",
                        "typeString": "int_const 3249...(69 digits omitted)...3898"
                      },
                      "value": "0x47d79263b3efee4f4d9470121dcd87e2c20dbe7025531b813367b8ca7f3cc30a"
                    },
                    "src": "1454:99:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 44890,
                  "nodeType": "ExpressionStatement",
                  "src": "1454:99:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 44896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1589:1:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 44895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1581:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44894,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1581:7:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1581:10:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 44898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1593:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "id": 44899,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44866,
                        "src": "1597:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "id": 44891,
                        "name": "merkleToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44788,
                        "src": "1563:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MerkleToken_$88",
                          "typeString": "contract MerkleToken"
                        }
                      },
                      "id": 44893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1575:5:26",
                      "memberName": "claim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87,
                      "src": "1563:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes32[] memory) external"
                      }
                    },
                    "id": 44900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1563:40:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44901,
                  "nodeType": "ExpressionStatement",
                  "src": "1563:40:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 44907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1652:1:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 44906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1644:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 44905,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1644:7:26",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 44908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1644:10:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 44903,
                            "name": "merkleToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44788,
                            "src": "1622:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MerkleToken_$88",
                              "typeString": "contract MerkleToken"
                            }
                          },
                          "id": 44904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1634:9:26",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43675,
                          "src": "1622:21:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 44909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1622:33:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 44910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1657:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 44902,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2574,
                        2599,
                        2612,
                        2628,
                        2670,
                        2712,
                        2754,
                        2791,
                        2828,
                        2865,
                        409,
                        434,
                        464,
                        489,
                        548,
                        573,
                        603,
                        628,
                        2101,
                        2136
                      ],
                      "referencedDeclaration": 603,
                      "src": "1613:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1613:46:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44912,
                  "nodeType": "ExpressionStatement",
                  "src": "1613:46:26"
                }
              ]
            },
            "functionSelector": "4dd89805",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFailNotAllowedAddress",
            "nameLocation": "1139:25:26",
            "parameters": {
              "id": 44860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1164:2:26"
            },
            "returnParameters": {
              "id": 44861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1174:0:26"
            },
            "scope": 44982,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44967,
            "nodeType": "FunctionDefinition",
            "src": "1672:657:26",
            "nodes": [],
            "body": {
              "id": 44966,
              "nodeType": "Block",
              "src": "1707:622:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    44918
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44918,
                      "mutability": "mutable",
                      "name": "acct1",
                      "nameLocation": "1725:5:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 44966,
                      "src": "1717:13:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 44917,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1717:7:26",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44920,
                  "initialValue": {
                    "hexValue": "307830303144616136314561613234314138443839363037313934464333623131383464634239423443",
                    "id": 44919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1733:42:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x001Daa61Eaa241A8D89607194FC3b1184dcB9B4C"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1717:58:26"
                },
                {
                  "assignments": [
                    44925
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44925,
                      "mutability": "mutable",
                      "name": "proof",
                      "nameLocation": "1802:5:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 44966,
                      "src": "1785:22:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 44923,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1785:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 44924,
                        "nodeType": "ArrayTypeName",
                        "src": "1785:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44931,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 44929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1824:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 44928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1810:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 44926,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1814:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 44927,
                        "nodeType": "ArrayTypeName",
                        "src": "1814:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      }
                    },
                    "id": 44930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1810:16:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1785:41:26"
                },
                {
                  "expression": {
                    "id": 44936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44932,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44925,
                        "src": "1836:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 44934,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 44933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1855:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1836:30:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307863333864623837353832646461306265353031643230343266623439653230663761396663393833393761653633613662343665613365323065653631363136",
                      "id": 44935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1869:66:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_88451403999294037792036426233273788035138811233763372650285275301913737696790_by_1",
                        "typeString": "int_const 8845...(69 digits omitted)...6790"
                      },
                      "value": "0xc38db87582dda0be501d2042fb49e20f7a9fc98397ae63a6b46ea3e20ee61616"
                    },
                    "src": "1836:99:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 44937,
                  "nodeType": "ExpressionStatement",
                  "src": "1836:99:26"
                },
                {
                  "expression": {
                    "id": 44942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44938,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44925,
                        "src": "1945:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 44940,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 44939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1964:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1945:30:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307837343233643664383336303762383161633861666363333131323233373765326263366163663062656432646134653333653036666164386636323530323062",
                      "id": 44941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1978:66:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_52531612885682877015832737444870946753393484368508083069287983580769818051083_by_1",
                        "typeString": "int_const 5253...(69 digits omitted)...1083"
                      },
                      "value": "0x7423d6d83607b81ac8afcc31122377e2bc6acf0bed2da4e33e06fad8f625020b"
                    },
                    "src": "1945:99:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 44943,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:99:26"
                },
                {
                  "expression": {
                    "id": 44948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44944,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44925,
                        "src": "2055:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 44946,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 44945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2074:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2055:30:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307834396163373633363031393465376562333033346465656532366232653038306536353838613963313865346430323538306461376163376663343236383737",
                      "id": 44947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2088:66:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_33323551503792938407881051124115478174251364800197143906785746984089463974007_by_1",
                        "typeString": "int_const 3332...(69 digits omitted)...4007"
                      },
                      "value": "0x49ac76360194e7eb3034deee26b2e080e6588a9c18e4d02580da7ac7fc426877"
                    },
                    "src": "2055:99:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 44949,
                  "nodeType": "ExpressionStatement",
                  "src": "2055:99:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44953,
                        "name": "acct1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44918,
                        "src": "2182:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 44954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2189:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "id": 44955,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44925,
                        "src": "2193:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "id": 44950,
                        "name": "merkleToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44788,
                        "src": "2164:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MerkleToken_$88",
                          "typeString": "contract MerkleToken"
                        }
                      },
                      "id": 44952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2176:5:26",
                      "memberName": "claim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87,
                      "src": "2164:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes32[] memory) external"
                      }
                    },
                    "id": 44956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2164:35:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44957,
                  "nodeType": "ExpressionStatement",
                  "src": "2164:35:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "307830303144616136314561613234314138443839363037313934464333623131383464634239423443",
                            "id": 44961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2254:42:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0x001Daa61Eaa241A8D89607194FC3b1184dcB9B4C"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 44959,
                            "name": "merkleToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44788,
                            "src": "2232:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MerkleToken_$88",
                              "typeString": "contract MerkleToken"
                            }
                          },
                          "id": 44960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2244:9:26",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43675,
                          "src": "2232:21:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 44962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2232:65:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 44963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2311:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 44958,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2574,
                        2599,
                        2612,
                        2628,
                        2670,
                        2712,
                        2754,
                        2791,
                        2828,
                        2865,
                        409,
                        434,
                        464,
                        489,
                        548,
                        573,
                        603,
                        628,
                        2101,
                        2136
                      ],
                      "referencedDeclaration": 603,
                      "src": "2210:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2210:112:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44965,
                  "nodeType": "ExpressionStatement",
                  "src": "2210:112:26"
                }
              ]
            },
            "functionSelector": "7f5b7b9c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFailBadProof",
            "nameLocation": "1681:16:26",
            "parameters": {
              "id": 44915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1697:2:26"
            },
            "returnParameters": {
              "id": 44916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1707:0:26"
            },
            "scope": 44982,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44981,
            "nodeType": "FunctionDefinition",
            "src": "2335:131:26",
            "nodes": [],
            "body": {
              "id": 44980,
              "nodeType": "Block",
              "src": "2372:94:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 44970,
                      "name": "testClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44859,
                      "src": "2382:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 44971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2382:11:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44972,
                  "nodeType": "ExpressionStatement",
                  "src": "2382:11:26"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 44973,
                      "name": "testClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44859,
                      "src": "2403:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 44974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2403:11:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44975,
                  "nodeType": "ExpressionStatement",
                  "src": "2403:11:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "43616e742072656365697665206d6f7265207468616e206f6e6365",
                        "id": 44977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2429:29:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b394dbfa067d08661077abfb94d01e8815ffa25c0bbb6b719261e20ae20555b",
                          "typeString": "literal_string \"Cant receive more than once\""
                        },
                        "value": "Cant receive more than once"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0b394dbfa067d08661077abfb94d01e8815ffa25c0bbb6b719261e20ae20555b",
                          "typeString": "literal_string \"Cant receive more than once\""
                        }
                      ],
                      "id": 44976,
                      "name": "fail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2513,
                        305
                      ],
                      "referencedDeclaration": 2513,
                      "src": "2424:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 44978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2424:35:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44979,
                  "nodeType": "ExpressionStatement",
                  "src": "2424:35:26"
                }
              ]
            },
            "functionSelector": "31edf2ea",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFailClaimTwice",
            "nameLocation": "2344:18:26",
            "parameters": {
              "id": 44968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2362:2:26"
            },
            "returnParameters": {
              "id": 44969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2372:0:26"
            },
            "scope": 44982,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44784,
              "name": "Test",
              "nameLocations": [
                "242:4:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12304,
              "src": "242:4:26"
            },
            "id": 44785,
            "nodeType": "InheritanceSpecifier",
            "src": "242:4:26"
          }
        ],
        "canonicalName": "MerkleTest",
        "contractDependencies": [
          88
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          44982,
          12304,
          12253,
          7789,
          7464,
          6671,
          4611,
          3873,
          2380,
          2446,
          2443
        ],
        "name": "MerkleTest",
        "nameLocation": "228:10:26",
        "scope": 44983,
        "usedErrors": [],
        "usedEvents": [
          94,
          98,
          102,
          106,
          110,
          114,
          118,
          122,
          128,
          134,
          142,
          150,
          156,
          162,
          168,
          174,
          2468,
          2473,
          2478,
          2485,
          2492,
          2499
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 26
}